<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.pjt.model.dao.VideoDao">

	<select id="selectAll" resultType="Video">
		SELECT * FROM video ORDER BY
		upload_date DESC
	</select>

	<select id="selectById" parameterType="int" resultType="Video">
		SELECT *
		FROM video WHERE video_no = #{videoNo}
	</select>

	<insert id="insert" parameterType="Video">
		INSERT INTO video
		(video_title, channel_name, view_count, upload_date,
		video_like, field,
		fitness_part_no)
		VALUES (#{videoTitle}, #{channelName}, #{viewCount},
		#{uploadDate},
		#{videoLike}, #{field}, #{fitnessPartNo})
	</insert>

	<update id="update" parameterType="Video">
		UPDATE video
		SET video_title =
		#{videoTitle},
		channel_name = #{channelName},
		view_count = #{viewCount},
		upload_date = #{uploadDate},
		video_like = #{videoLike},
		field =
		#{field},
		fitness_part_no = #{fitnessPartNo}
		WHERE video_no = #{videoNo}
	</update>

	<delete id="delete" parameterType="int">
		DELETE FROM video WHERE
		video_no = #{videoNo}
	</delete>
	<delete id="deleteReviewsByVideoNo" parameterType="int">
		DELETE FROM
		review WHERE video_no = #{videoNo}
	</delete>

	<select id="searchByTitle" parameterType="string"
		resultType="Video">
		SELECT * FROM video
		WHERE video_title LIKE CONCAT('%',
		#{keyword}, '%')
	</select>

	<select id="selectAllSortedByViewCount" resultType="Video">
		SELECT * FROM
		video ORDER BY view_count DESC
	</select>
	<select id="selectByField" parameterType="string"
		resultType="Video">
		SELECT * FROM video WHERE field = #{field}
	</select>
	<select id="selectByFieldAndSort" resultType="Video">
		SELECT * FROM video
		<where>
			<if test="field != null and field != ''">
				field = #{field}
			</if>
		</where>
		<choose>
			<when test="sort == 'view'">
				ORDER BY view_count DESC
			</when>
			<when test="sort == 'like'">
				ORDER BY video_like DESC
			</when>
			<otherwise>
				ORDER BY video_no DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="getPaged" resultType="Video">
  SELECT * FROM video
  ORDER BY upload_date DESC
  LIMIT #{size} OFFSET #{offset}
</select>

<select id="getTotalCount" resultType="int">
  SELECT COUNT(*) FROM video
</select>

 <select id="existsByVideoId" resultType="boolean" parameterType="string">
        SELECT COUNT(*) > 0 FROM video WHERE video_id = #{videoId}
    </select>

  <insert id="insertFromYoutube" parameterType="com.ssafy.pjt.model.dto.Video">
    INSERT INTO video (
        video_id, video_title, channel_name, thumbnail_url,
        view_count, upload_date, video_like, field,
        fitness_part_no, tag
    )
    VALUES (
        #{videoId}, #{videoTitle}, #{channelName}, #{thumbnailUrl},
        0, NOW(), 0, #{field},
        #{fitnessPartNo}, #{tag}
    )
</insert>

<select id="selectLatestRecommendedForUser" resultType="Video" parameterType="string">
  SELECT v.*
  FROM video v
  JOIN user_recommend ur ON v.video_id = ur.video_id
  WHERE ur.user_id = #{userId}
  ORDER BY ur.created_at DESC
  LIMIT 3
</select>

<!-- 찜한 videoId 목록 -->
<select id="getFavoriteVideoIdsByUser" resultType="string" parameterType="string">
  SELECT video_id FROM user_favorite WHERE user_id = #{userId}
</select>

<select id="selectTop3ByTag" resultType="Video" parameterType="string">
  SELECT * FROM video
  WHERE tag = #{tag}
  ORDER BY upload_date DESC
  LIMIT 3
</select>
<insert id="insertUserRecommendation">
  INSERT IGNORE INTO user_recommend (user_id, video_id)
  VALUES (#{userId}, #{videoId})
</insert>

</mapper>